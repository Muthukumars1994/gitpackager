#!/bin/sh

ln -sf /usr/bin/ruby2.0 /usr/bin/ruby
ln -sf /usr/bin/gem2.0 /usr/bin/gem

mkdir /etc/unicorn
mkdir -p /var/log/megam/megamnilavu
mkdir -p /var/run/megam/megamnilavu

#chown megam:megam /var/run/megam/megamnilavu

#chown megam:megam /var/log/megam/megamnilavu


cat > /etc/unicorn/nilavu.rb <<EOF

##
# Unicorn config at /etc/unicorn/nilavu.rb
##

# What ports/sockets to listen on, and what options for them.
listen "8080", :tcp_nodelay => true, :backlog => 100

working_directory '/usr/share/megam/megamnilavu'

stdout_path "/var/log/megam/megamnilavu/nilavu_out.log"
stderr_path "/var/log/megam/megamnilavu/nilavu_err.log"

# What the timeout for killing busy workers is, in seconds
timeout 60

# Whether the app should be pre-loaded
preload_app false

# How many worker processes
worker_processes 8

# What to do before we fork a worker
before_fork do |server, worker|
  sleep 1
end

EOF

#set MEGAM_HOME for megamnilavu    NOTFOR THE WHOLE SYSTEM(we can't access by echo $MEGAM_HOME)
cat > //var/lib/megam/env.sh <<EOF
initctl set-env MEGAM_HOME='/var/lib/megam'             
EOF

chmod 755 /var/lib/megam/env.sh

cat > //etc/init/megamnilavu.conf <<EOF
# Configuration Upstart file for Nilavu
description "Upstart script for nilavu"

# When to start the service
start on runlevel [2345]
start on (started networking)

# When to stop the service
stop on runlevel [016]
stop on (stopping networking)
stop on (stopped megamnilavu)

# Automatically restart process if crashed. Tries 0 times every 60 seconds
respawn
respawn limit 0 60

pre-start script
 [ -d /var/run/megam/megamnilavu ] || mkdir -p /var/run/megam/megamnilavu
 [ -d /var/log/megam/megamnilavu ] || mkdir -p /var/log/megam/megamnilavu
 cd /var/lib/megam
 ./env.sh
 echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) megamnilavu starting" >> /var/log/megam/megamnilavu/megamnilavu.log
end script

script
 exec start-stop-daemon --start --chdir "/usr/share/megam/megamnilavu/" --exec /usr/bin/bundle exec unicorn_rails -- -E production -c "/etc/unicorn/nilavu.rb"
end script

post-start script
    PID=`status megamnilavu | egrep -oi '([0-9]+)$' | head -n1`
    echo $PID > /var/run/megam/megamnilavu/megamnilavu.pid
end script

post-stop script
    rm /var/run/megam/megamnilavu/megamnilavu.pid
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) megamnilavu Stopping" >> /var/log/megam/megamnilavu/megamnilavu.log
end script
EOF

cat > //usr/share/megam/megamnilavu/production.log <<EOF
test log
EOF

chmod 666 /usr/share/megam/megamnilavu/production.log

chown -R megam:megam /usr/share/megam/megamnilavu

cat > //var/lib/megam/nilavu.yml <<EOF                                  #Common yml

monitor:
  metric_source: ganglia
  host: ganglia_host
  base_url: http://monitor.megam.co.in/ganglia
  cluster: megampaas

storage:
  type: local
  aws_access_key: AWS_ACCCESS_KEY
  aws_secret_key: AWS_SECRET_KEY
  cross_cloud: cloud_keys
  cloud_tool: cloudrecipes
  server_url: https://s3-ap-southeast-1.amazonaws.com

api:
  host: localhost
  scheme: http                                                          #key must
  pub_key: megamgateway_pub.crt                                         #key must
  private_key: megamgateway.key                                         #key must

#if db and production are start from begining of the line it assumes as two inner hashes 
#{"db"=>nil, "production"=>{"adapter"=>"sqlite3"}}
#db:
#  production:
#        adapter: sqlite3
#        database: db/cocdb
#        pool: 5
#        timeout: 5000
EOF

cd /usr/share/megam/megamnilavu
gem install rake

export MEGAM_HOME=/var/lib/megam                        #To have DB under megam_home

echo "setting up database"
rake db:migrate RAILS_ENV=production
rake db:seed RAILS_ENV=production



[ -d /var/lib/megam/db ] && chown -R megam:megam /var/lib/megam/db 
[ -d /usr/share/megam/megamnilavu/db ] && chown -R megam:megam /usr/share/megam/megamnilavu/db

echo "starting megamnilavu"
sudo start megamnilavu
echo "started"

initctl reload-configuration


